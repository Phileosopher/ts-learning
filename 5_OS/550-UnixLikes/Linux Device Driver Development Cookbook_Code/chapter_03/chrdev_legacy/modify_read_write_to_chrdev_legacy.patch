diff --git a/chapter_3/chrdev_legacy/chrdev_legacy.c b/chapter_3/chrdev_legacy/chrdev_legacy.c
index 2fc25bc..401df1a 100644
--- a/chapter_3/chrdev_legacy/chrdev_legacy.c
+++ b/chapter_3/chrdev_legacy/chrdev_legacy.c
@@ -6,10 +6,15 @@
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/fs.h>
+#include <linux/uaccess.h>
 
 /* Device major umber */
 static int major;
 
+/* Device data */
+#define BUF_LEN		300
+static char chrdev_buf[BUF_LEN];
+
 /*
  * Methods
  */
@@ -17,17 +22,44 @@ static int major;
 static ssize_t chrdev_read(struct file *filp,
 			   char __user *buf, size_t count, loff_t *ppos)
 {
-	pr_info("return EOF\n");
+	int ret;
 
-	return 0;
+	pr_info("should read %ld bytes (*ppos=%lld)\n", count, *ppos);
+
+	/* Check for end-of-buffer */
+	if (*ppos + count >= BUF_LEN)
+		count = BUF_LEN - *ppos;
+
+	/* Return data to the user space */
+	ret = copy_to_user(buf, chrdev_buf + *ppos, count);
+	if (ret < 0)
+		return ret;
+
+	*ppos += count;
+	pr_info("return %ld bytes (*ppos=%lld)\n", count, *ppos);
+
+	return count;
 }
 
 static ssize_t chrdev_write(struct file *filp,
 			    const char __user *buf, size_t count, loff_t *ppos)
 {
-	pr_info("got %ld bytes\n", count);
+	int ret;
+
+	pr_info("should write %ld bytes (*ppos=%lld)\n", count, *ppos);
+
+	/* Check for end-of-buffer */
+	if (*ppos + count >= BUF_LEN)
+		count = BUF_LEN - *ppos;
+
+	/* Get data from the user space */
+	ret = copy_from_user(chrdev_buf + *ppos, buf, count);
+	if (ret < 0)
+		return ret;
+
+	*ppos += count;
+	pr_info("got %ld bytes (*ppos=%lld)\n", count, *ppos);
 
-	*ppos += count;	
 	return count;
 }
 
