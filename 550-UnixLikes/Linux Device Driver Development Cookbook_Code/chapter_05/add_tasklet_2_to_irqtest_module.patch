diff --git a/drivers/misc/irqtest.c b/drivers/misc/irqtest.c
index 186b4bbb23fb..bae3e8af31f1 100644
--- a/drivers/misc/irqtest.c
+++ b/drivers/misc/irqtest.c
@@ -23,12 +23,21 @@ static struct irqtest_data {
 	int irq;
 	unsigned int pin;
 	struct device *dev;
+	struct tasklet_struct task;
 } irqinfo;
 
 /*
- * The interrupt handler
+ * The interrupt handlers
  */
 
+static void irqtest_tasklet_handler(unsigned long flag)
+{
+	struct irqtest_data *info = (struct irqtest_data *) flag;
+	struct device *dev = info->dev;
+
+	dev_info(dev, "tasklet executed after IRQ %d", info->irq);
+}
+
 static irqreturn_t irqtest_interrupt(int irq, void *dev_id)
 {
 	struct irqtest_data *info = dev_id;
@@ -36,6 +45,8 @@ static irqreturn_t irqtest_interrupt(int irq, void *dev_id)
 
 	dev_info(dev, "interrupt occurred on IRQ %d\n", irq);
 
+	tasklet_schedule(&info->task);
+
 	return IRQ_HANDLED;
 }
 
@@ -80,6 +91,10 @@ static int irqtest_probe(struct platform_device *pdev)
 	dev_info(dev, "GPIO %u correspond to IRQ %d\n",
 				irqinfo.pin, irqinfo.irq);
 
+	/* Create our tasklet */
+	tasklet_init(&irqinfo.task, irqtest_tasklet_handler,
+				(unsigned long) &irqinfo);
+
 	/* Request IRQ line and setup corresponding handler */
 	irqinfo.dev = dev;
 	ret = request_irq(irqinfo.irq, irqtest_interrupt, 0,
@@ -98,6 +113,7 @@ static int irqtest_remove(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
 
+	tasklet_kill(&irqinfo.task);
 	free_irq(irqinfo.irq, &irqinfo);
 	dev_info(dev, "IRQ %d is now unmanaged!\n", irqinfo.irq);
 
